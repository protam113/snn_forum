const fetchCommentChildren = async (commentId) => {
  try {
    const url = endpoints.CmtBlogReply.replace(":id", commentId);
    const response = await authApi().get(url);

    if (!response.ok) {
      throw new Error("Network response was not ok");
    }

    return response.data.results || [];
  } catch (error) {
    console.error("Error fetching child comments:", error);
    toast.error("Error fetching child comments!");
    throw error;
  }
};

const useCommentChildren = (commentId) => {
  return useQuery({
    queryKey: ["commentChildren", commentId],
    queryFn: async () => {
      if (!commentId) {
        throw new Error("Comment ID is required");
      }

      return fetchCommentChildren(commentId);
    },
    staleTime: Infinity,
    cacheTime: Infinity,
    onError: (error) => {
      toast.error(`Error fetching child comments: ${error.message}`);
    },
  });
};